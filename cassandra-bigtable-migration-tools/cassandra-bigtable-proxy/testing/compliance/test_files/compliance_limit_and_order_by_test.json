[
    {
        "title": "Select and Validate Data for limit opeeration",
        "description": "This test inserts a record into the 'test_table' table and performs a SELECT query to validate that the correct data is retrieved.",
        "kind": "dml",
        "operations": [
          {
            "query": "INSERT INTO bigtabledevinstance.user_info (name, age, code) VALUES (?, ?, ?)",
            "query_desc": "Insert a record to set up for the SELECT operation.",
            "query_type": "INSERT",
            "params": [
              { "value": "Ram", "datatype": "text" },
              { "value": 45, "datatype": "bigint" },
              { "value": 123, "datatype": "int" }
            ],
            "expected_result": null
          },
          {
            "query": "INSERT INTO bigtabledevinstance.user_info (name, age, code) VALUES (?, ?, ?)",
            "query_desc": "Insert a record to set up for the SELECT operation.",
            "query_type": "INSERT",
            "params": [
              { "value": "Ram", "datatype": "text" },
              { "value": 11, "datatype": "bigint" },
              { "value": 173, "datatype": "int" }
            ],
            "expected_result": null
          },
          {
            "query": "INSERT INTO bigtabledevinstance.user_info (name, age, code) VALUES (?, ?, ?)",
            "query_desc": "Insert a record to set up for the SELECT operation.",
            "query_type": "INSERT",
            "params": [
              { "value": "Ram", "datatype": "text" },
              { "value": 98, "datatype": "bigint" },
              { "value": 1, "datatype": "int" }
            ],
            "expected_result": null
          },
          {
            "query": "INSERT INTO bigtabledevinstance.user_info (name, age, code) VALUES (?, ?, ?)",
            "query_desc": "Insert a record to set up for the SELECT operation.",
            "query_type": "INSERT",
            "params": [
              { "value": "Ram", "datatype": "text" },
              { "value": 245, "datatype": "bigint" },
              { "value": 8433, "datatype": "int" }
            ],
            "expected_result": null
          },
          {
            "query": "INSERT INTO bigtabledevinstance.user_info (name, age, code) VALUES (?, ?, ?)",
            "query_desc": "Insert a record to set up for the SELECT operation.",
            "query_type": "INSERT",
            "params": [
              { "value": "Ram", "datatype": "text" },
              { "value": 90, "datatype": "bigint" },
              { "value": 0, "datatype": "int" }
            ],
            "expected_result": null
          },
          {
            "query": "INSERT INTO bigtabledevinstance.user_info (name, age, code) VALUES (?, ?, ?)",
            "query_desc": "Insert a record to set up for the SELECT operation.",
            "query_type": "INSERT",
            "params": [
              { "value": "Ram", "datatype": "text" },
              { "value": 50, "datatype": "bigint" },
              { "value": 150, "datatype": "int" }
            ],
            "expected_result": null
          },
          {
            "query": "INSERT INTO bigtabledevinstance.user_info (name, age, code) VALUES (?, ?, ?)",
            "query_desc": "Insert a record to set up for the SELECT operation.",
            "query_type": "INSERT",
            "params": [
              { "value": "Ram", "datatype": "text" },
              { "value": 40, "datatype": "bigint" },
              { "value": 140, "datatype": "int" }
            ],
            "expected_result": null
          },
          {
            "query": "INSERT INTO bigtabledevinstance.user_info (name, age, code) VALUES (?, ?, ?)",
            "query_desc": "Insert a record to set up for the SELECT operation.",
            "query_type": "INSERT",
            "params": [
              { "value": "Ram", "datatype": "text" },
              { "value": 1001, "datatype": "bigint" },
              { "value": 743, "datatype": "int" }
            ],
            "expected_result": null
          },
          {
            "query": "INSERT INTO bigtabledevinstance.user_info (name, age, code) VALUES (?, ?, ?)",
            "query_desc": "Insert a record to set up for the SELECT operation.",
            "query_type": "INSERT",
            "params": [
              { "value": "Ram", "datatype": "text" },
              { "value":732, "datatype": "bigint" },
              { "value": 10213, "datatype": "int" }
            ],
            "expected_result": null
          },
          {
            "query": "INSERT INTO bigtabledevinstance.user_info (name, age, code) VALUES (?, ?, ?)",
            "query_desc": "Insert a record to set up for the SELECT operation.",
            "query_type": "INSERT",
            "params": [
              { "value": "Ram", "datatype": "text" },
              { "value": 85, "datatype": "bigint" },
              { "value": 1193, "datatype": "int" }
            ],
            "expected_result": null
          },
          {
            "query": "INSERT INTO bigtabledevinstance.user_info (name, age, code) VALUES (?, ?, ?)",
            "query_desc": "Insert a record to set up for the SELECT operation.",
            "query_type": "INSERT",
            "params": [
              { "value": "Ram", "datatype": "text" },
              { "value": 832, "datatype": "bigint" },
              { "value": 934, "datatype": "int" }
            ],
            "expected_result": null
          },
          {
            "query": "INSERT INTO bigtabledevinstance.user_info (name, age, code) VALUES (?, ?, ?)",
            "query_desc": "Insert a record to set up for the SELECT operation.",
            "query_type": "INSERT",
            "params": [
              { "value": "Ram", "datatype": "text" },
              { "value": 10, "datatype": "bigint" },
              { "value": 11, "datatype": "int" }
            ],
            "expected_result": null
          },
          {
            "query": "INSERT INTO bigtabledevinstance.user_info (name, age, code) VALUES (?, ?, ?)",
            "query_desc": "Insert a record to set up for the SELECT operation.",
            "query_type": "INSERT",
            "params": [
              { "value": "Abc", "datatype": "text" },
              { "value": 10, "datatype": "bigint" },
              { "value": 2347, "datatype": "int" }
            ],
            "expected_result": null
          },
          {
            "query": "INSERT INTO bigtabledevinstance.user_info (name, age, code) VALUES (?, ?, ?)",
            "query_desc": "Insert a record to set up for the SELECT operation.",
            "query_type": "INSERT",
            "params": [
              { "value": "Xyz", "datatype": "text" },
              { "value": 10, "datatype": "bigint" },
              { "value": 5847, "datatype": "int" }
            ],
            "expected_result": null
          },
          {
            "query": "INSERT INTO bigtabledevinstance.user_info (name, age, code) VALUES (?, ?, ?)",
            "query_desc": "Insert a record to set up for the SELECT operation.",
            "query_type": "INSERT",
            "params": [
              { "value": "Ram", "datatype": "text" },
              { "value": 93, "datatype": "bigint" },
              { "value": 13, "datatype": "int" }
            ],
            "expected_result": null
          },
          {
            "query": "SELECT name, age  FROM bigtabledevinstance.user_info WHERE name = ? ORDER BY age LIMIT ?",
            "query_desc": "Retrieve the first N records with specified name, ordered by age.",
            "query_type": "SELECT",
            "params": [
              { "value": "Ram", "datatype": "text" },
              { "value": 4, "datatype": "bigint" }
            ],
            "expect_cassandra_specific_error": "ORDER BY is only supported when the partition key is restricted by an EQ or an IN.",
            "default_diff": true,
            "expected_multi_row_result": [
                [
                    { "name": "Ram", "datatype": "text" },
                    { "age": 10, "datatype": "bigint" }
                ],
                [
                    { "name": "Ram", "datatype": "text" },
                    { "age":11, "datatype": "bigint" }
                ],
                [
                    { "name": "Ram", "datatype": "text" },
                    { "age": 40, "datatype": "bigint" }
                ],
                [
                    { "name": "Ram", "datatype": "text" },
                    { "age": 45, "datatype": "bigint" }
                ]
            ]
          },
          {
            "query": "SELECT name, age  FROM bigtabledevinstance.user_info WHERE name = ? ORDER BY age desc LIMIT ?",
            "query_desc": "Retrieve the top N records with specified name, ordered by age descending.",
            "query_type": "SELECT",
            "params": [
              { "value": "Ram", "datatype": "text" },
              { "value": 4, "datatype": "bigint" }
            ],
            "default_diff": true,
            "expect_cassandra_specific_error": "ORDER BY is only supported when the partition key is restricted by an EQ or an IN.",
            "expected_multi_row_result": [
                [
                    { "name": "Ram", "datatype": "text" },
                    { "age": 1001, "datatype": "bigint" }
                ],
                [
                    { "name": "Ram", "datatype": "text" },
                    { "age": 832, "datatype": "bigint" }
                ],
                [
                    { "name": "Ram", "datatype": "text" },
                    { "age": 732, "datatype": "bigint" }
                ],
                [
                    { "name": "Ram", "datatype": "text" },
                    { "age": 245, "datatype": "bigint" }
                ]
            ]
          },
          {
            "query": "SELECT name, age  FROM bigtabledevinstance.user_info WHERE age = ? ORDER BY name LIMIT ?",
            "query_desc": "Retrieve the first N records with specified age, ordered by name.",
            "query_type": "SELECT",
            "params": [
              { "value": 10, "datatype": "bigint" },
              { "value": 2, "datatype": "bigint" }
            ],
            "default_diff": true,
            "expected_multi_row_result": [
                [
                    { "name": "Abc", "datatype": "text" },
                    { "age": 10, "datatype": "bigint" }
                ],
                [
                    { "name": "Ram", "datatype": "text" },
                    { "age": 10, "datatype": "bigint" }
                ]
            ]
          },
          {
            "query": "SELECT name, age  FROM bigtabledevinstance.user_info WHERE age = ? ORDER BY name",
            "query_desc": "Retrieve all records with specified age, ordered by name.",
            "query_type": "SELECT",
            "params": [
              { "value": 10, "datatype": "bigint" }
            ],
            "default_diff": true,
            "expected_multi_row_result": [
                [
                    { "name": "Abc", "datatype": "text" },
                    { "age": 10, "datatype": "bigint" }
                ],
                [
                    { "name": "Ram", "datatype": "text" },
                    { "age": 10, "datatype": "bigint" }
                ],
                [
                    { "name": "Xyz", "datatype": "text" },
                    { "age": 10, "datatype": "bigint" }
                ]
            ]
          },
          {
            "query": "SELECT name, age  FROM bigtabledevinstance.user_info WHERE age = ? ORDER BY name desc LIMIT ?",
            "query_desc": "Retrieve the top N records with specified age, ordered by name descending.",
            "query_type": "SELECT",
            "params": [
              { "value": 10, "datatype": "bigint" },
              { "value": 3, "datatype": "bigint" }
            ],
            "default_diff": true,
            "expected_multi_row_result": [
                [
                    { "name": "Xyz", "datatype": "text" },
                    { "age": 10, "datatype": "bigint" }
                ],
                [
                    { "name": "Ram", "datatype": "text" },
                    { "age": 10, "datatype": "bigint" }
                ], 
                [
                    { "name": "Abc", "datatype": "text" },
                    { "age": 10, "datatype": "bigint" }
                ]
            ]
          },
          {
            "query": "SELECT name, age  FROM bigtabledevinstance.user_info WHERE age = ? ORDER BY name desc",
            "query_desc": "Retrieve all records with specified age, ordered by name descending.",
            "query_type": "SELECT",
            "params": [
              { "value": 10, "datatype": "bigint" }
            ],
            "default_diff": true,
            "expected_multi_row_result": [
                [
                    { "name": "Xyz", "datatype": "text" },
                    { "age": 10, "datatype": "bigint" }
                ],
                [
                    { "name": "Ram", "datatype": "text" },
                    { "age": 10, "datatype": "bigint" }
                ], 
                [
                    { "name": "Abc", "datatype": "text" },
                    { "age": 10, "datatype": "bigint" }
                ]
            ]
          },
          {
            "query": "SELECT name, age  FROM bigtabledevinstance.user_info WHERE age = ? LIMIT ?",
            "query_desc": "Retrieve the first N records with specified age.",
            "query_type": "SELECT",
            "params": [
              { "value": 10, "datatype": "bigint" },
              { "value": 3, "datatype": "bigint" }
            ],
            "default_diff": true,
            "expected_multi_row_result": [
                [
                    { "name": "Abc", "datatype": "text" },
                    { "age": 10, "datatype": "bigint" }
                ],
                [
                    { "name": "Ram", "datatype": "text" },
                    { "age": 10, "datatype": "bigint" }
                ], 
                [
                    { "name": "Xyz", "datatype": "text" },
                    { "age": 10, "datatype": "bigint" }
                ]
            ]
          },
          {
            "query": "SELECT name, age  FROM bigtabledevinstance.user_info WHERE age = ? LIMIT ?",
            "query_desc": "Try to get records with specified age with negative limit value.",
            "query_type": "SELECT",
            "params": [
              { "value": 10, "datatype": "bigint" },
              { "value": -3, "datatype": "bigint" }
            ],
            "expected_result": [
                {
                    "expect_error": true,
                    "error_message": "LIMIT must be strictly positive"
                }
            ]
          },
          {
            "query": "SELECT name, age  FROM bigtabledevinstance.user_info WHERE age = ? LIMIT ?",
            "query_desc": "Retrieve records with specified age with '0' limit value.",
            "query_type": "SELECT",
            "params": [
              { "value": 10, "datatype": "bigint" },
              { "value": 0, "datatype": "bigint" }
            ],
            "expected_result": [
                {
                    "expect_error": true,
                    "error_message": "LIMIT must be strictly positive"
                }
            ]
          },
          {
            "query": "SELECT name, age  FROM bigtabledevinstance.user_info WHERE age = ? LIMIT ? Order By name",
            "query_desc": "Trying to run invalid query",
            "query_type": "SELECT",
            "params": [
              { "value": 10, "datatype": "bigint" },
              { "value": 5, "datatype": "bigint" }
            ],
            "expected_result": [
                {
                    "expect_error": true,
                    "avoid_compare_error_message": true,
                    "cassandra_error_message": "line 1:75 mismatched input 'Order' expecting EOF (...age = ? LIMIT ? [Order]...)"
                }
            ]
          },
          {
            "query": "SELECT name, age  FROM bigtabledevinstance.user_info WHERE age = ? Order By name LIMIT",
            "query_desc": "Trying to run invalid query without Limit value",
            "query_type": "SELECT",
            "params": [
              { "value": 10, "datatype": "bigint" }
            ],
            "expected_result": [
                {
                    "expect_error": true,
                    "avoid_compare_error_message": true,
                    "cassandra_error_message": "line 0:-1 no viable alternative at input '<EOF>'"
                }
            ]
          },
          {
            "query": "SELECT name, age  FROM bigtabledevinstance.user_info WHERE age = ? Order By LIMIT 100",
            "query_desc": "Trying to run invalid query without Order By value",
            "query_type": "SELECT",
            "params": [
              { "value": 10, "datatype": "bigint" }
            ],
            "expected_result": [
                {
                    "expect_error": true,
                    "avoid_compare_error_message": true,
                    "cassandra_error_message": ""
                }
            ]
          },
          {
            "query": "SELECT name, age FROM bigtabledevinstance.user_info WHERE age = ? Order By 1 desc",
            "query_desc": "Trying to run invalid query with unsupported Order By value",
            "query_type": "SELECT",
            "params": [
              { "value": 10, "datatype": "bigint" }
            ],
            "expected_result": [
                {
                    "expect_error": true,
                    "avoid_compare_error_message": true,
                    "error_message": "Order_by section not have proper values",
                    "cassandra_error_message": "line 1:75 no viable alternative at input '1' (...age = ? Order By [1]...)"
                }
            ]
          },
          {
            "query": "SELECT name, age FROM bigtabledevinstance.user_info WHERE age = ? Order By xyz",
            "query_desc": "Trying to run invalid query with unexisting Order By column",
            "query_type": "SELECT",
            "params": [
              { "value": 10, "datatype": "bigint" }
            ],
            "expected_result": [
                {
                    "expect_error": true,
                    "error_message": "Undefined column name xyz in table bigtabledevinstance.user_info",
                    "cassandra_error_message": "Undefined column name xyz in table bigtabledevinstance.user_info"
                }
            ]
          }
        ],
        "success_message": "Record retrieved successfully with LIMIT and Order By keywords from user_details table.",
        "failure_message": "Failed to retrieve the expected record from user_details table."
    },
    {
      "title": "Comprehensive GROUP BY, ORDER BY, LIMIT, and WHERE tests on user_info (isolated, robust)",
      "description": "Test combinations of GROUP BY, ORDER BY (multiple columns), LIMIT, WHERE (=), aggregates, and AS keyword on user_info table with robust cleanup",
      "kind": "dml",
      "operations": [
        {
          "query": "INSERT INTO bigtabledevinstance.user_info (name, age, code, credited, balance) VALUES (?, ?, ?, ?, ?)",
          "query_desc": "Insert CompreOne",
          "query_type": "INSERT",
          "params": [
            { "value": "CompreOne", "datatype": "text" },
            { "value": 81, "datatype": "bigint" },
            { "value": 100, "datatype": "int" },
            { "value": 1000.0, "datatype": "double" },
            { "value": 500.0, "datatype": "float" }
          ],
          "expected_result": null
        },
        {
          "query": "INSERT INTO bigtabledevinstance.user_info (name, age, code, credited, balance) VALUES (?, ?, ?, ?, ?)",
          "query_desc": "Insert CompreTwo",
          "query_type": "INSERT",
          "params": [
            { "value": "CompreTwo", "datatype": "text" },
            { "value": 81, "datatype": "bigint" },
            { "value": 200, "datatype": "int" },
            { "value": 2000.0, "datatype": "double" },
            { "value": 1000.0, "datatype": "float" }
          ],
          "expected_result": null
        },
        {
          "query": "INSERT INTO bigtabledevinstance.user_info (name, age, code, credited, balance) VALUES (?, ?, ?, ?, ?)",
          "query_desc": "Insert CompreThree",
          "query_type": "INSERT",
          "params": [
            { "value": "CompreThree", "datatype": "text" },
            { "value": 81, "datatype": "bigint" },
            { "value": 300, "datatype": "int" },
            { "value": 3000.0, "datatype": "double" },
            { "value": 1500.0, "datatype": "float" }
          ],
          "expected_result": null
        },
        {
          "query": "SELECT age, name, SUM(code) AS total_code, AVG(balance) FROM bigtabledevinstance.user_info WHERE age = ? GROUP BY age, name ORDER BY name ASC,total_code DESC LIMIT 2",
          "query_desc": "Group by age, name; order by name asc, total_code DESC; limit 2; aggregates without AS",
          "query_type": "SELECT",
          "params": [{ "value": 81, "datatype": "bigint" }],
          "expected_multi_row_result": [
            [
              { "age": 81, "datatype": "bigint" },
              { "name": "CompreOne", "datatype": "text" },
              { "total_code": 100, "datatype": "int" },
              { "system.avg(balance)": 500.0, "datatype": "float" }
            ],
            [
              { "age": 81, "datatype": "bigint" },
              { "name": "CompreThree", "datatype": "text" },
              { "total_code": 300, "datatype": "int" },
              { "system.avg(balance)": 1500.0, "datatype": "float" }
            ]
          ]
        },
        {
          "query": "SELECT age AS user_age, name, SUM(code) AS total_code FROM bigtabledevinstance.user_info WHERE age = ? GROUP BY age, name ORDER BY user_age ASC, total_code DESC LIMIT 2",
          "query_desc": "Group by age, name; order by age alias and aggregate alias; limit 2",
          "query_type": "SELECT",
          "params": [{ "value": 81, "datatype": "bigint" }],
          "expected_multi_row_result": [
            [
              { "user_age": 81, "datatype": "bigint" },
              { "name": "CompreThree", "datatype": "text" },
              { "total_code": 300, "datatype": "int" }
            ],
            [
              { "user_age": 81, "datatype": "bigint" },
              { "name": "CompreTwo", "datatype": "text" },
              { "total_code": 200, "datatype": "int" }
            ]
          ]
        },
        {
          "query": "SELECT age, name AS username, SUM(code) AS total_code, MAX(balance) AS max_balance FROM bigtabledevinstance.user_info WHERE age = ? GROUP BY age, name ORDER BY username ASC, max_balance DESC LIMIT 2",
          "query_desc": "Group by age, name; order by name alias and aggregate alias; limit 2",
          "query_type": "SELECT",
          "params": [{ "value": 81, "datatype": "bigint" }],
          "expected_multi_row_result": [
            [
              { "age": 81, "datatype": "bigint" },
              { "username": "CompreOne", "datatype": "text" },
              { "total_code": 100, "datatype": "int" },
              { "max_balance": 500.0, "datatype": "float" }
            ],
            [
              { "age": 81, "datatype": "bigint" },
              { "username": "CompreThree", "datatype": "text" },
              { "total_code": 300, "datatype": "int" },
              { "max_balance": 1500.0, "datatype": "float" }
            ]
          ]
        },
        {
          "query": "SELECT age, name, COUNT(*) FROM bigtabledevinstance.user_info WHERE age = ? GROUP BY age, name ORDER BY age ASC, name DESC LIMIT 2",
          "query_desc": "Group by age, name; order by age asc, name desc; limit 2; count aggregate without AS",
          "query_type": "SELECT",
          "params": [{ "value": 81, "datatype": "bigint" }],
          "expected_multi_row_result": [
            [
              { "age": 81, "datatype": "bigint" },
              { "name": "CompreThree", "datatype": "text" },
              { "system.count(*)": 1, "datatype": "bigint" }
            ],
            [
              { "age": 81, "datatype": "bigint" },
              { "name": "CompreTwo", "datatype": "text" },
              { "system.count(*)": 1, "datatype": "bigint" }
            ]
          ]
        }
      ],
      "success_message": "Successfully tested GROUP BY, ORDER BY (multi-col), LIMIT, WHERE, aggregates, and AS keyword combinations on user_info (isolated, robust).",
      "failure_message": "Failed to test GROUP BY, ORDER BY, LIMIT, WHERE, aggregates, and AS keyword combinations on user_info (isolated, robust)."
    }
]